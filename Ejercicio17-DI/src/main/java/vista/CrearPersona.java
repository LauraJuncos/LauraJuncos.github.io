/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import DTO.PersonasDTO;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import modelo.Personas;
import servicio.PersonasServicio;

/**
 *
 * @author Laura
 */
public class CrearPersona extends javax.swing.JFrame {

    private static final int LONGITUD_MAXIMA_NOMBRE = 50; // Cambia esto al valor adecuado según tu base de datos

    private PersonasServicio personasServicio;

    /**
     * Creates new form CrearPersona
     */
    public CrearPersona(PersonasServicio personasServicio) {
        if (personasServicio == null) {
            throw new IllegalArgumentException("PersonasServicio no puede ser null");
        }
        this.personasServicio = personasServicio;

        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Para cerrar solo esta ventana
        setLocationRelativeTo(null);

        // Colores
        configurarEncabezadoTabla();

        // Agrupar botones de sexo
        ButtonGroup grupoSexo = new ButtonGroup();
        grupoSexo.add(jRadioButton1); // Asumimos que jRadioButton1 es "Hombre"
        grupoSexo.add(jRadioButton2); // Asumimos que jRadioButton2 es "Mujer"
    }

    private void agregarPersona() {
        String nombre = jTextField1.getText().trim();
        String dni = jTextField2.getText().trim();
        Personas.Sexo sexo = jRadioButton1.isSelected() ? Personas.Sexo.Hombre : jRadioButton2.isSelected() ? Personas.Sexo.Mujer : null;

        if (nombre.isEmpty() || dni.isEmpty() || sexo == null) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (nombre.length() > LONGITUD_MAXIMA_NOMBRE) {
            JOptionPane.showMessageDialog(this, "El nombre no puede tener más de " + LONGITUD_MAXIMA_NOMBRE + " caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!esNombreValido(nombre)) {
            // Validación para caracteres especiales en el nombre
            JOptionPane.showMessageDialog(this, "El nombre contiene caracteres especiales no permitidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!esDniValido(dni)) {
            // Validación para evitar secuencias SQL en el DNI
            JOptionPane.showMessageDialog(this, "El DNI debe tener 8 dígitos seguidos de una letra mayúscula.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            PersonasDTO persona = new PersonasDTO();
            persona.setNombre(nombre);
            persona.setDni(dni);
            persona.setSexo(sexo); // Setear el valor del enum Sexo directamente

            personasServicio.agregarPersonas(persona);
            JOptionPane.showMessageDialog(this, "Persona agregada exitosamente");
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al agregar la persona: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Método para validar el nombre (evitar caracteres especiales)
    private boolean esNombreValido(String nombre) {
        return nombre.matches("^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$");
    }

    // Método para validar el DNI (8 dígitos y una letra mayúscula)
    private boolean esDniValido(String dni) {
        // Validar que el DNI tenga el formato de 8 dígitos seguidos por una letra mayúscula
        return dni.matches("^[0-9]{8}[A-Z]$");
    }

    private void configurarEncabezadoTabla() {
        jButton1.setBackground(new java.awt.Color(0, 128, 0));
        jButton2.setBackground(new java.awt.Color(255, 0, 0));
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jRadioButton1.setText("Hombre");

        jRadioButton2.setText("Mujer");

        jLabel2.setText("DNI:");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        agregarPersona();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
